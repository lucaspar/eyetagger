services:

    db:
        image: postgres:16
        restart: always
        user: "1000:1000"
        env_file:
          - env/django_db.env
        volumes:
          - ./deploy/db_creation.sh:/docker-entrypoint-initdb.d/init.sh
          - ./data/postgres:/var/lib/postgresql/data
        networks:
          - net-iris

    web:
        build: .
        # command: ./scripts/install-and-run.sh
        command: bash -c "while true; do sleep 10; done"
        restart: always
        user: "1000:1000"
        env_file:
          - env/django_db.env
          - env/django_app.env
        volumes:
          # source
          - type: bind
            source: ./
            target: /app
            read_only: false
          # dependencies
          - type: bind
            source: ./cache/uv
            target: /var/cache/uv
          # dataset - web app access
          - type: bind
            source: ./data/dataset
            target: /app/backend/dataset
            read_only: false
          # dataset - guest access
          - type: bind
            source: ./data/dataset
            target: /app/dist/static/data
            read_only: false
        ports:
          - "28000:8000"
          - "29000:9000"
        depends_on:
          - db
        networks:
          - net-nginx-proxy
          - net-iris

    # certbot:
    #     image: certbot/certbot
    #     entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    #     networks:
    #       - net-nginx-proxy
    #     volumes:
    #       - ./deploy/certbot/conf:/etc/letsencrypt
    #       - ./deploy/certbot/www:/var/www/certbot

    nginx:
        image: nginx:stable-alpine
        restart: always
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        ports:
          - 20080:80
          - 20443:443
        depends_on:
          - web
        networks:
          - net-nginx-proxy
        volumes:
          - ./deploy/nginx:/etc/nginx/conf.d
          # - ./deploy/certbot/conf:/etc/letsencrypt
          # - ./deploy/certbot/www:/var/www/certbot

networks:
    net-nginx-proxy:
        external: true
    net-iris:
        external: false
